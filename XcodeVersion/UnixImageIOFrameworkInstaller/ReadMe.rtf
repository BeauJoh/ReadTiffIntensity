{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10100\viewh12380\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\qc

\f0\b\fs36 \cf0 UnixImageIO Framework\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b0\fs28 \cf0 \
\pard\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
\cf0 1.2.5	2011-4-12\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
\cf0 \
This is a combined framework for a variety of common image formats, using standard Unix libraries.  Included are GIF, JPEG, JasPer (JPEG2000/JP2), PNG, TIFF and GeoTIFF.\
\
Mac OS 10.5 or greater is required, plus the 
\b PROJ
\b0  framework, and either a PowerPC or Intel Mac.\
\
Note: I got the idea for the name from Apple's ImageIO framework buried in the bowels of the system, which also includes separate unix libraries for TIFF, JPEG, JP2, and PNG, but they're unusable on their own.\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b \cf0 Contents\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b0 \cf0 \
\pard\tx2520\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
\cf0 UnixImageIO includes the following libraries (these are not frameworks themselves):\
\pard\tx2520\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2520\fi-2520\ri1440\ql\qnatural
\cf0 \
\pard\tx2520\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2520\fi-2520\ri1440\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://sourceforge.net/projects/libungif/"}}{\fldrslt 
\b \cf0 giflib}}
\b  4.1.6
\b0 	Includes LZW compression.\
\
\pard\tx2520\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2520\fi-2520\ri1440\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://www.ijg.org/"}}{\fldrslt 
\b \cf0 jpeg}}
\b  6b 8/12bit
\b0 	Venerable jpeg library.\
\
\pard\tx2520\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2520\fi-2520\ri1440\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://www.libpng.org/pub/png/libpng.html"}}{\fldrslt 
\b \cf0 PNG}}
\b  1.5.2
\b0 	What everyone should be using instead of GIF by now.\
\
\pard\tx2520\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2520\fi-2520\ri1440\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://www.remotesensing.org/libtiff/"}}{\fldrslt 
\b \cf0 libTIFF}}
\b  4.0.0b7
\b0 	Includes LZW compression and BigTIFF support.\
\
\pard\tx2520\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2520\fi-2520\ri1440\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://trac.osgeo.org/geotiff/"}}{\fldrslt 
\b \cf0 libGeoTIFF}}
\b  1.3.0
\b0 	GeoTIFF extension to TIFF.\
\
\pard\tx2520\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2520\fi-2520\ri1440\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://www.ece.uvic.ca/~mdadams/jasper/"}}{\fldrslt 
\b \cf0 JasPer}}
\b  1.900.1
\b0 	JPEG2000 format.  Includes UUID tag support.\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b \cf0 Programs
\b0 \ul \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
\cf0 \ulnone \
A few programs from the Unix libraries are in the framework's Programs folder.  If you want to easily execute these programs, add the Programs folder to your shell path (add this line to your 
\f1\fs24 ~/.bash_profile
\f0\fs28 ).  ie:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ri1440\ql\qnatural

\f1\fs24 \cf0 export PATH=/Library/Frameworks/UnixImageIO.framework/Programs:$PATH\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\f0\fs28 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://sourceforge.net/projects/libungif/"}}{\fldrslt 
\b \cf0 \
}}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b \cf0 Developer Use\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
\cf0 \ul \ulc0 Compiling and Linking\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
\cf0 \ulnone \
As a framework, normal Xcode compiler/CPP behaviour applies.  That is, no 
\f1\fs24 -I
\f0\fs28  option is needed.  The easiest way to include headers is to use 
\f1\fs24 <UnixImageIO/UnixImageIO.h>
\f0\fs28 .  This includes all the image format headers for you.  If you want to use just individual headers, use 
\f1\fs24 <UnixImageIO/[header].h>
\f0\fs28  and substitute the usual header(s) for the image format as specified by that format's Unix libraries.  Linking options are 
\f1\fs24 -framework UnixImageIO
\f0\fs28 .\
\
Unix software can also use the -framework linking, but be aware that libtool before version 1.5.20 will not pass that thru without the protection of a 
\f1\fs24 -Xlinker
\f0\fs28  or 
\f1\fs24 -Xcompiler
\f0\fs28  prefix (depending on the libtool version).\
\
Without changing anything in the Unix source, compiling and linking is simple - use the 
\f1\fs24 UnixImageIO.framework/unix
\f0\fs28  symlink folder as if it were 
\f1\fs24 /usr/local
\f0\fs28 .  That unix symlink folder has the usual bin-lib-include structure for configure to locate what it needs.  In other words, a common configure option might be 
\f1\fs24 --with-gif=/Library/Frameworks/UnixImageIO.framework/unix
\f0\fs28 .\
\
The UnixImageIO framework is unusual - the framework can operate in place of the idividual libraries, all symbols in the libraries are available when just the UnixImageIO framework is loaded.  So, 
\f1\fs24 -framework UnixImageIO
\f0\fs28  is equivalent to saying 
\f1\fs24 -lgif -ljpeg -ljpeg12 -ljasper -lpng -ltiff
\f0\fs28 .\
\
Note: no static libraries are included.  Some configure scripts test for the availability of a library by the presence of the static library.  You must edit the configure script to change those lib*.a's to lib*.dylib's.  Or to a framework test.\
\
libjpeg is available in both 8bit and 12bit versions.  12bit use alongside 8bit requires special care.  The 8bit headers are the default.  12bit headers are in a 'jpeg12' subfolder.  See the libjpeg {\field{\*\fldinst{HYPERLINK "http://sourceforge.net/projects/libjpeg/"}}{\fldrslt SourceForge}} site for more information.  See the libtiff 4.0b5 source for an example of concurrent 8/12bit usage.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
\cf0 \ul Other Notes\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
\cf0 \ulnone \
You can move them to other locations, such as an Application's package.  The usual place in an application is the app's 
\f1\fs24 Contents/Frameworks
\f0\fs28  folder.  Before linking (or maybe after linking) the framework copy's install_name and library paths should be changed using 
\f1\fs24 install_name_tool
\f0\fs28 .  A handy relative path that can be used is 
\f1\fs24 @executable_path
\f0\fs28 , this is the location of the app executable.  So a path to various frameworks within the app package would be 
\f1\fs24 @executable_path/../Frameworks/UnixImageIO.framework/UnixImageIO
\f0\fs28 .\
\
You would have to change the id of the framework, and the dependencies of the framework that are also included in the app package, to be relative paths.  This can get messy.\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b \cf0 Uninstall\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b0 \cf0 \
Drag UnixImageIO.framework from /Library/Frameworks to the Trash.\
\
Run one of these commands in a Terminal, depending on your system version:\
\

\f1\fs24 sudo pkgutil --forget com.kyngchaos.UnixImageIO-C-framework-leo\

\f0\fs28  - or:\

\f1\fs24 sudo pkgutil --forget com.kyngchaos.UnixImageIO-C-framework-snow\

\f0\fs28 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b \cf0 Support, Documentation, and Disclaimer\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural

\b0 \cf0 \
This software is provided "as is", without any warranty or guarantee of its usability or fitness for any purpose.\
\
I don't provide support on the usage of the included software.  See the documentation and help resources on their websites if you need such help.  All I can help with is the installation on Mac OS X, and problems related to its operation on Mac OS X.\
\
I am not a C programmer and cannot help with programming involving the software.  I have enough general programming skills to deal with most build issues and some programming issues, and may be able to help with problems with this build that affect its inclusion in other software.\
\
\
- William Kyngesburye\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
{\field{\*\fldinst{HYPERLINK "mailto:kyngchaos@kyngchaos.com"}}{\fldrslt \cf0 kyngchaos@kyngchaos.com}}
\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri1440\ql\qnatural
{\field{\*\fldinst{HYPERLINK "http://www.kyngchaos.com"}}{\fldrslt 
\fs28 \cf0 http://www.kyngchaos.com/}}
\fs28 \
}